apply plugin: 'java'
apply plugin: 'idea'

def getCheckedOutGitCommitHash() {
    def gitFolder = '.git/'
    def takeFromHash = 12
    def refSeparator = ':'
    /*
     * '.git/HEAD' contains either
     *      in case of detached head: the currently checked out commit hash
     *      otherwise: a reference to a file containing the current commit hash
     */
    def head = new File(gitFolder + 'HEAD').text.split(refSeparator) // .git/HEAD
    def isCommit = head.length == 1 // e5a7c79edabbf7dd39888442df081b1c9d8e88fd
    // def isRef = head.length > 1     // ref: refs/heads/master

    if(isCommit) return head[0].trim().take(takeFromHash) // e5a7c79edabb

    def refHead = new File(gitFolder + head[1].trim()) // .git/refs/heads/master
    refHead.text.trim().take(takeFromHash)
}

idea {
    module {
        // If available, we want javadoc and sources attached to our dependencies
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    mavenCentral()

    // Not all dependencies are on mavenCentral(). Some of them are available only locally.
    flatDir(dirs: 'lib')
}

dependencies {
    compile 'com.dropbox.core:dropbox-core-sdk:1.7.5'
    compile 'com.fasterxml.jackson.core:jackson-core:2.2.3'
    compile 'com.jcraft:jsch:0.1.50'
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.slf4j:slf4j-simple:1.7.5'

    // This one is resolved from the 'lib' folder. Sources and javadoc are not attached somehow.
    compile 'org.jnativehook:JNativeHook:1.1.4'

    testCompile 'junit:junit:4.+'
}

sourceCompatibility = 1.7
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'ScreenShotter',
                   'Implementation-Version': version,
                   'Main-Class': 'de.fau.screenshotter.ScreenShotter'
    }

    classifier = getCheckedOutGitCommitHash()

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// This downloads the gradle wrapper to have a common gradle installation for all developers
task wrapper(type: Wrapper) {
    gradleVersion = '1.9'
}